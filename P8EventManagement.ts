import { Page } from "playwright";

export class EventManagement{
    readonly page: Page;
    private elmEventManagement = {locator:"//div[normalize-space()='Event Management' and start-with(@class,'sub-menu-div')]",name:"Event Management"};
    private btnAlerts = {locator:"//button[@id='Alerts']",name: "Alerts Button"};
    private btnCreateAlert = {locator:"//button[@id='addNewRule']|//button[name=Create Rule]",name: "Create Alert Button"};
    private txtEventSource = {locator:"//label[normalize-space()='Event Source*']/following::input[1]|//input[name=eventsource]",name: "Event Source Textbox"};
    private txtDescription = {locator:"//label[normalize-space()='Description']/following::input[1]|//input[name=description]",name: "Description Textbox"};
    private txtNode = {locator:"//label[normalize-space()='Node']/following::input[1]|//input[name=node]",name: "Node Textbox"};
    private txtNodeReource = {locator:"//label[normalize-space()='Nodere Source']/following::input[1]|//input[name=noderesource]",name: "noderesource Textbox"};
    private txtMetricType = {locator:"//label[normalize-space()='Metric type']/following::input[1]|//input[name=eventmetrictype]",name: "Metric type Textbox"};
    private txtMetricName = {locator:"//label[normalize-space()='Metric Name*']/following::input[1]|//input[name=metricname]",name: "Metric Name Textbox"};
    private txtMetricValue = {locator:"//label[normalize-space()='Metric Value*']/following::input[1]|//input[name=metricvalue]",name: "Metric Value Textbox"};
    private txtSeverity = {locator:"//label[normalize-space()='Severity*']/following::input[1]|//input[name=severity]",name: "Severity Textbox"};
    private btnEventOccuredTime = {locator:"//button[name=eventoccuredtime]|//button[type()='datetime-local']",name: "Event Occured Time Textbox"};
    private txtConfigurationItem = {locator:"//label[normalize-space()='Configuration Item*']/following::input[1]|//input[name=configurationitem]",name: "Configuration Item Textbox"};
    private txtParentAlertId = {locator:"//label[normalize-space()='Parent Alert Id']/following::input[1]|//input[name=parentconciertoalertid]",name: "Parent Alert Id Textbox"};
    private chkMaintenance = {locator:"//label[normalize-space()='Maintenance']/following::input[1]|//input[name=maintenance]",name: "Maintenance? Checkbox"};
    private txtAdditionalEventDetails = {locator:"//label[normalize-space()='Additional Event Details']/following::input[1]|//input[name=maintenance]",name: "Additional Event Details Textbox"};
    private txtEventKey = {locator:"//label[normalize-space()='Event Key']/following::input[1]|//input[name=eventkey]",name: "Event Key Textbox"};
    private txtEventCount = {locator:"//label[normalize-space()='Event Count']/following::input[1]|//input[name=eventcount]",name: "Event Count Textbox"};
    private btnEventOccurredStartTime = {locator:"//button[name=eventoccuredtime_initial]|//button[type()='datetime-local']",name: "Event Event Occurred Start Time Button"};
    private btnEventOccurredEndTime = {locator:"//button[name=eventoccuredtime_last]|//button[type()='datetime-local']",name: "Event Occurred End Time Button"};
    private btnSave = {locator:"//button[contains(@class,'btn btn-primary')]",name: "Save Button"};
    private elmSuccessMsg = {locator: "//div[normalize-space()='Success']",name: "Success Notification"};
    private btnCancel = {locator:"//button[contains(@class,'cancel-btn')]",name: "Cancel Button"};
    private txtSearch = {locator:"//input[placeholder='Search']",name: "Search Textbox"};
    private btnView = {locator:"//button[contains(@class,'eye_icon mx-3')]",name: "View Button"};
    private btnEdit = {locator:"//button[contains(@class,'edit_icon_events mx-3')]",name: "Edit Button"};
    private txtAlertId = {locator:"//label[normalize-space()='Alert Id']/following::input[1]|//input[name=conciertoalertid]",name: "Alert Id  Textbox"};
    private chkAlertAcknowledged = {locator:"//label[normalize-space()='Alert Acknowledged']/following::input[1]|//input[name=isalertacknowledged]",name: "Alert Acknowledged Checkbox"};
    private lstStatus = {locator:"//label[normalize-space()='Status']/following::input[1]|//input[name=status]",name: "Status List"};
    private txtIncidentId = {locator:"//label[normalize-space()='Incident Id']/following::input[1]|//input[name=incidentId]",name: "Incident Id Textbox"};
    private chkIncidentcreated = {locator:"//label[normalize-space()='Incident created']/following::input[1]|(//input[contains(@class,'MuiFormGroup-row')])[1]",name: "Incident created Checkbox"};
    private chkIsAlertRuleApplied = {locator:"//label[normalize-space()='Is Alert Rule Applied']/following::input[1]|(//input[contains(@class,'MuiFormGroup-row')])[2]",name: "Is Alert Rule Applied Checkbox"};
    private chkAutomationApplied  = {locator:"//label[normalize-space()='Automation Applied']/following::input[1]|(//input[contains(@class,'MuiFormGroup-row')])[3]",name: "Automation Applied Checkbox"};
    private txtWorkNotes = {locator:"//label[normalize-space()='Work Notes']/following::input[1]|//input[contains(@class,'MuiFilledInput-multiline')]",name: "Work Notes Textbox"}; 
    private btnAcknowledgeAlert = {locator:"(//button[contains(@class,'ack-alert')])[1]",name: "Acknowledge Alert Button"};
    private btnCreateIncident = {locator:"(//button[contains(@class,'ack-alert')])[2]",name: "Create Incident Button"};
    private btnApplyAutomation = {locator:"(//button[contains(@class,'ack-alert')])[3]",name: "Apply Automation Button"};
    private btnBack = {locator:"//button[contains(@class,'btn add-new-tc active')]",name: "Back Button"};  
    private btnEvents = {locator:"//button[@id='Events']",name: "Events Button"};

};